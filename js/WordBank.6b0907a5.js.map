{"version":3,"sources":["webpack://draw-and-guess/./src/views/WordBank.vue","webpack://draw-and-guess/./src/views/WordBank.vue?769d","webpack://draw-and-guess/./src/views/WordBank.vue?687a"],"names":["class","word","type","randomWord","loading","WordBank","mounted","this","loadWordBankContent","id","$route","params","$router","push","path","response","fetch","wordBankContent","json","undefined","words","Math","floor","random","length","navigator","clipboard","writeText","components","NavBar","render"],"mappings":"yQAMWA,MAAM,Q,WAQyC,Q,oPAbxD,QAkBe,Q,WAjBb,IAEY,EAFZ,QAEY,Q,WADV,IAAmB,EAAnB,QAAmB,M,OAErB,QAaU,Q,WAZR,IAWM,E,SAXN,QAWM,MAXN,EAWM,EAVJ,QAIS,Q,WAHP,IAES,EAFT,QAES,Q,WADP,IAAgC,EAAhC,QAAgC,SAA7B,SAAK,qBAAG,EAAAC,MAAO,aAAU,M,gBAGhC,QAIS,Q,WAHP,IAES,EAFT,QAES,Q,WADP,IAA6D,EAA7D,QAA6D,GAAlDC,KAAK,UAAW,QAAO,EAAAC,Y,YAAY,IAAG,C,qDAR1B,EAAAC,c,4XCMnC,IAAqBC,EAArB,cAAsC,KAAG,yFAEhC,KAFgC,uBAG7B,GAEVC,UACOC,KAAKC,sBAGa,4BACvB,MAAMC,EAAKF,KAAKG,OAAOC,OAAOF,GAC9B,GAAW,KAAPA,GAA2B,kBAAPA,EAEtB,kBADMF,KAAKK,QAAQC,KAAK,CAAEC,KAAM,MAGlC,MAAMC,QAAiBC,MAAM,6BAA2CP,UACxEF,KAAKU,sBAAyBF,EAASG,OACvCX,KAAKH,SAAU,QACTG,KAAKJ,aAGG,wBACegB,IAAzBZ,KAAKU,kBACPV,KAAKN,KAAOM,KAAKU,gBAAgBG,MAAMC,KAAKC,MAAMD,KAAKE,SAAWhB,KAAKU,gBAAgBG,MAAMI,eACvFC,UAAUC,UAAUC,UAAUpB,KAAKN,SAxB1BI,EAAQ,IAN5B,QAAQ,CACPuB,WAAY,CACVC,OAAM,QAIWxB,G,QCPrB,SAAgByB,EAChB,YAAmB,kBAEnB","file":"js/WordBank.6b0907a5.js","sourcesContent":["<template>\n  <el-container>\n    <el-header>\n      <nav-bar></nav-bar>\n    </el-header>\n    <el-main>\n      <div class=\"main\" v-loading=\"loading\">\n        <el-row>\n          <el-col>\n            <p>随机词语：{{ word }} （已复制到剪贴板）</p>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col>\n            <el-button type=\"primary\" @click=\"randomWord\">换一个</el-button>\n          </el-col>\n        </el-row>\n      </div>\n    </el-main>\n  </el-container>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport NavBar from \"@/components/NavBar.vue\";\nimport { WordBankContent } from \"@/wordBankInterface\";\n\n/* eslint-disable @typescript-eslint/naming-convention */\n@Options({\n  components: {\n    NavBar,\n  },\n})\n/* eslint-enable @typescript-eslint/naming-convention */\nexport default class WordBank extends Vue {\n  wordBankContent?: WordBankContent;\n  word = \"\";\n  loading = true;\n\n  mounted(): void {\n    void this.loadWordBankContent();\n  }\n\n  async loadWordBankContent(): Promise<void> {\n    const id = this.$route.params.id;\n    if (id === \"\" || typeof id !== \"string\") {\n      await this.$router.push({ path: \"/\" });\n      return;\n    }\n    const response = await fetch(`${process.env.BASE_URL ?? \"/\"}word_bank/${id}.json`);\n    this.wordBankContent = (await response.json()) as WordBankContent;\n    this.loading = false;\n    await this.randomWord();\n  }\n\n  async randomWord(): Promise<void> {\n    if (this.wordBankContent !== undefined) {\n      this.word = this.wordBankContent.words[Math.floor(Math.random() * this.wordBankContent.words.length)];\n      await navigator.clipboard.writeText(this.word);\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.main {\n  @media screen and (min-width: 1200px) {\n    margin: 0 180px;\n  }\n}\n</style>\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport NavBar from \"@/components/NavBar.vue\";\nimport { WordBankContent } from \"@/wordBankInterface\";\n\n/* eslint-disable @typescript-eslint/naming-convention */\n@Options({\n  components: {\n    NavBar,\n  },\n})\n/* eslint-enable @typescript-eslint/naming-convention */\nexport default class WordBank extends Vue {\n  wordBankContent?: WordBankContent;\n  word = \"\";\n  loading = true;\n\n  mounted(): void {\n    void this.loadWordBankContent();\n  }\n\n  async loadWordBankContent(): Promise<void> {\n    const id = this.$route.params.id;\n    if (id === \"\" || typeof id !== \"string\") {\n      await this.$router.push({ path: \"/\" });\n      return;\n    }\n    const response = await fetch(`${process.env.BASE_URL ?? \"/\"}word_bank/${id}.json`);\n    this.wordBankContent = (await response.json()) as WordBankContent;\n    this.loading = false;\n    await this.randomWord();\n  }\n\n  async randomWord(): Promise<void> {\n    if (this.wordBankContent !== undefined) {\n      this.word = this.wordBankContent.words[Math.floor(Math.random() * this.wordBankContent.words.length)];\n      await navigator.clipboard.writeText(this.word);\n    }\n  }\n}\n","import { render } from \"./WordBank.vue?vue&type=template&id=248e715c&scoped=true\"\nimport script from \"./WordBank.vue?vue&type=script&lang=ts\"\nexport * from \"./WordBank.vue?vue&type=script&lang=ts\"\n\nimport \"./WordBank.vue?vue&type=style&index=0&id=248e715c&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-248e715c\"\n\nexport default script"],"sourceRoot":""}